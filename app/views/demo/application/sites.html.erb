<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
    <title>Data Entry Demo: <%= controller.action_name.capitalize %> UI</title>
    
    <%= stylesheet_link_tag 'application' %>
    <%= stylesheet_link_tag '../javascripts/ext-2.1/resources/css/ext-all' %>
    <%= javascript_include_tag 'ext-2.1/adapter/ext/ext-base' %>
    <%= javascript_include_tag 'ext-2.1/ext-all-debug' %>        
    <%= GMap.header %>
    <%= javascript_include_tab 'aquatic_sites_map' %>
        
  </head>
  <body onunload="GUnload();">
    
    <script type="text/javascript">
        Ext.onReady(function() {
            var store = new SiteStore('/aquatic_sites.js');    
            var map   = new MapPanel(store);
            var sites = new SitesPanel(store);

            new Ext.Viewport({
                layout: 'border',
                items: [map, sites]
            });
    
            sites.list.on('selectionchange', function(dataview, selections) {        
                if(selections.length > 0) {
                    var site = dataview.getSelectedRecords()[0].data;
                    console.debug('selected site changed to ' + site.name);
                    map.showMarker(site);
                }
            }, this);
        
            store.loadData({ 
                'results': <%= @count %>, 
                'sites': <%= @sites.to_json %>  
            });
        });

        

        SiteStore = function(url) {
            this.extent = null;
    
            c = {
                root: 'sites',
                totalProperty: 'results',
                id: 'id',
                fields: [
                    'id', 'name', 'description', 
                    { name: 'lat', type: 'float' }, 
                    { name: 'lng', type: 'float' }
                ], 
                url: url,
                baseParams: { filter: '' }
            };
            SiteStore.superclass.constructor.call(this, Ext.apply(c, {
                proxy: !c.data ? new Ext.data.HttpProxy({url: c.url, method: 'GET'}) : undefined,
                reader: new Ext.data.JsonReader(c, c.fields)
            }));
        };
        Ext.extend(SiteStore, Ext.data.Store, {
            setFilter: function(text) {
                if(this.baseParams.filter == text)
                    return;
        
                console.debug('setting filter to ' + text);
                this.baseParams.filter = text;
                this.load();
            }
        });
    </script>
    
    
  </body>
</html>